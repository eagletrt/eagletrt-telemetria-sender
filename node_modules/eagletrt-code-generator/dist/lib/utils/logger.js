"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chalk = require("chalk");
var Logger = /** @class */ (function () {
    function Logger(options) {
        this.log = options.log;
    }
    Logger.prototype.formatPath = function (path) {
        var lastSlash = path.lastIndexOf('/');
        var pre = path.slice(0, lastSlash + 1);
        var post = path.slice(lastSlash + 1);
        return "" + chalk.italic.hex('#C5C8C6')(pre) + chalk.bold.italic.blue(post);
    };
    Logger.prototype.info = function (str, tag, path) {
        if (this.log) {
            var colouredTag = chalk.bold.blue("[" + (tag || "INFO") + "]");
            var text = path ? this.formatPath(str) : str;
            console.log(colouredTag + " " + text);
        }
    };
    Logger.prototype.succ = function (str, tag, path) {
        if (this.log) {
            var colouredTag = chalk.bold.green("[" + (tag || "SUCCESS") + "]");
            var text = path ? this.formatPath(str) : str;
            console.log(colouredTag + " " + text);
        }
    };
    Logger.prototype.warn = function (str, tag, path) {
        if (this.log) {
            var colouredTag = chalk.bold.yellow("[" + (tag || "WARNING") + "]");
            var text = path ? this.formatPath(str) : str;
            console.log(colouredTag + " " + text);
        }
    };
    Logger.prototype.error = function (str, tag, path) {
        if (this.log) {
            var colouredTag = chalk.bold.red("[" + (tag || "ERROR") + "]");
            var text = path ? this.formatPath(str) : str;
            console.log(colouredTag + " " + text);
        }
    };
    return Logger;
}());
exports.Logger = Logger;
//# sourceMappingURL=logger.js.map